-- payonel once again
local a={}local b=checkArg;a.internal={}function a.internal.range_adjust(c,d,e)b(1,c,'number','nil')b(2,d,'number','nil')b(3,e,'number')if c==nil then c=1 elseif c<0 then c=e+c+1 end;if d==nil then d=e elseif d<0 then d=e+d+1 end;return c,d end;function a.internal.table_view(f,c,d)return setmetatable({},{__index=function(g,h)return(type(h)~='number'or h>=c and h<=d)and f[h]or nil end,__len=function(g)return d end})end;local i=a.internal.range_adjust;local j=a.internal.table_view;function a.first(f,k,c,d)b(1,f,'table')b(2,k,'function','table')if type(k)=='table'then local l;l,k=k,function(m,n,f)for o=1,#l do local p=l[o]if a.begins(f,p,n)then return true,#p end end end end;local e=#f;c,d=i(c,d,e)f=j(f,c,d)for q=c,d do local r,s=k(f[q],q,f)if r then return q,q+(s or 1)-1 end end end;function a.begins(f,p,c,d)b(1,f,'table')b(2,p,'table')local t=#p;c,d=i(c,d,#f)if t>d-c+1 then return end;for q=1,t do if f[c+q-1]~=p[q]then return end end;return true end;function a.concat(...)local u,v,w={},0;for g,f in ipairs({...})do if type(f)~='table'then return nil,'parameter '..tostring(g)..' to concat is not a table'end;local x=f.n or#f;w=w or f.n;for q=1,x do v=v+1;u[v]=f[q]end end;u.n=w and v or nil;return u end;local i=a.internal.range_adjust;local j=a.internal.table_view;function a.sub(f,c,d)b(1,f,'table')local u,e={},#f;c,d=i(c,d,e)d=math.min(d,e)for q=math.max(c,1),d do u[#u+1]=f[q]end;return u end;function a.partition(f,y,z,c,d)b(1,f,'table')b(2,y,'function','table')b(3,z,'boolean','nil')if type(y)=='table'then return a.partition(f,function(m,q,f)return a.first(f,y,q)end,z,c,d)end;local e=#f;c,d=i(c,d,e)local A=j(f,c,d)local B={}local C=true;local D=function()if C then B[#B+1]={}C=false end end;local q=c;while q<=d do local m=A[q]local E,F=y(m,q,A)if E==true then E,F=q,q elseif E==false then E,F=nil,nil end;if E~=nil then E,F=i(E,F,d)E=E>=q and E end;if not E then D()table.insert(B[#B],m)else local G=a.sub(A,q,not z and F or E-1)if#G>0 then D()B[#B+math.min(#B[#B],1)]=G end;local H=math.max(math.max(F or E,E),q)if F and E and F<E and H==q then if#B==0 then B[1]={}end;table.insert(B[#B],m)end;q=H;C=true end;q=q+1 end;return B end;function a.foreach(f,I,c,d)b(1,f,'table')b(2,I,'function','string')local J=I;I=type(I)=="string"and function(m)return m[J]end or I;local e=#f;c,d=i(c,d,e)f=j(f,c,d)local u={}for q=c,d do local x,w=I(f[q],q,f)if x~=nil then if w then u[w]=x else u[#u+1]=x end end end;return u end;function a.where(f,K,c,d)return a.foreach(f,function(m,q,f)return K(m,q,f)and m or nil end,c,d)end;function a.at(f,L)b(1,f,"table")b(2,L,"number","nil")local M=1;for w,p in pairs(f)do if M==L then return w,p end;M=M+1 end;return nil,M-1 end;return a
