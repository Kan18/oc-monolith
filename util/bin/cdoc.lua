-- basic automated documentation generation for components using their builtin tostring features --

local component = require("component")
local shell = require("shell")
local pager = os.getenv("MANPAGER") or "/bin/less.lua"

local function view(file)
  shell.execute(pager, file)
end

local args, opts = shell.parse(...)

if opts.help or #args < 1 then
  print([[
cdoc (c) 2020 Ocawesome101 under the MIT license.
Automated component documentation generation using their built-in tostring() functionality. May not work fully in some emulators.

usage:
  cdoc [--<help|verbose>|-v] COMPONENTTYPE

  Outputs a text file consisting of basic documentation for the specified component, if installed.
]])
  return 1
end

local ctype = args[1]

local comp = component[ctype]

local outfile = assert(io.open("/tmp/cdoc_" .. ctype, "w"))
print("Generating documentation....")
outfile:write("Auto-generated documentation: component." .. ctype .. "\n\nGenerated by cdoc. I make NO GUARANTEES as to the quality of this documentation.\n\n")
for k, v in pairs(comp) do
  if k ~= "type" and k ~= "address" and k ~= "slot" then
    if verbose then
      print("METHOD", k)
    end
    outfile:write(tostring(v):gsub(" %-%- ?", "\n  "):gsub("function", ctype .. "." .. k) .. "\n\n")
  elseif verbose then
    print("SKIP", k)
  end
end
outfile:close()
view("/tmp/cdoc_" .. ctype)
